
Key Problems Found:
Missing Login Route:

Your frontend (useAuth.ts) tries to call /api/auth/login but this route isn't visible in your shared code

The authRoutes import suggests login logic exists in another file that isn't shown

Session Configuration Issues:

No visible session store configuration (like connect-redis)

Missing proper cookie settings for production

CORS Configuration:

No visible CORS middleware with credentials support

Immediate Fixes Needed:
First, let's add a proper login route. Create or modify routes/auth.ts:

typescript
import express from 'express';
import { storage } from '../storage';
import { createSessionToken } from '../auth';

const router = express.Router();

router.post('/login', async (req, res) => {
  try {
    const { email } = req.body;
    
    // 1. Verify user exists
    const user = await storage.getUserByEmail(email);
    if (!user) {
      return res.status(401).json({ message: 'Invalid credentials' });
    }

    // 2. Create session
    req.session.userId = user.id;
    req.session.email = user.email;
    
    // 3. Set cookie
    res.cookie('session_token', createSessionToken(user), {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'strict',
      maxAge: 86400000 // 1 day
    });

    res.json({ 
      user: {
        id: user.id,
        email: user.email,
        credits: user.credits,
        emailVerified: user.emailVerified
      }
    });

  } catch (error) {
    console.error('Login error:', error);
    res.status(500).json({ message: 'Login failed' });
  }
});

export default router;
Update your session middleware configuration in routes.ts:

typescript
// Add this near the top where sessions are configured
app.use(session({
  secret: process.env.SESSION_SECRET || 'your-secret-key',
  resave: false,
  saveUninitialized: false,
  cookie: {
    secure: process.env.NODE_ENV === 'production',
    httpOnly: true,
    sameSite: 'strict',
    maxAge: 86400000 // 1 day
  },
  store: /* your session store */ 
}));
Add CORS support in routes.ts:

typescript
import cors from 'cors';

// Add this before your routes
app.use(cors({
  origin: [
    'https://sofieamind.serviondemand.repl.co',
    'https://SofeiaMind.serviondemand.repl.co'
  ],
  credentials: true
}));
Verification Steps:
After making these changes:

Restart your Replit server

Clear browser cookies for your domain

Try logging in again

Check these in Chrome DevTools:

Network tab: Verify the login request returns 200

Application tab: Check if cookies are being set

Console tab: Look for any errors

Common Replit-Specific Issues:
Proxy Settings:

typescript
// Add this to routes.ts
app.set('trust proxy', 1);
Environment Variables:

Make sure SESSION_SECRET is set in Replit secrets

Use .env file for local development:

text
SESSION_SECRET=your_strong_secret_here
NODE_ENV=development